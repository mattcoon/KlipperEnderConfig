# Macros for a modified Ender-3 v2 with Sprite Pro Extruder,
# CR Touch, with a 4.2.7 silent board

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0} 
# and END_PRINT.

[virtual_pins]

[output_pin ADAPTIVE_BED_MESH]
pin: virtual_pin:ADAPTIVE_BED_MESH_pin
value: 1

[output_pin FULL_BED_MESH]
pin: virtual_pin:FULL_BED_MESH_pin
value: 0

[output_pin ADAPTIVE_PURGE_LINE]
pin: virtual_pin:ADAPTIVE_PURGE_LINE_pin
value: 1

[gcode_macro _ADAPTIVE_BED_MESH_ON]
description: Enable Adaptive Bed Mesh and Disable Full Bed Mesh
gcode:
  SET_PIN PIN=ADAPTIVE_BED_MESH VALUE=1
  SET_PIN PIN=FULL_BED_MESH VALUE=0
  RESPOND TYPE=command MSG="action:prompt_end"


[gcode_macro _FULL_BED_MESH_ON]
description: Disable Adaptive Bed Mesh and Enable Full Bed Mesh
gcode:
  SET_PIN PIN=ADAPTIVE_BED_MESH VALUE=0
  SET_PIN PIN=FULL_BED_MESH VALUE=1
  RESPOND TYPE=command MSG="action:prompt_end"


[gcode_macro _BED_MESH_OFF]
description: Disable Adaptive Bed Mesh and Enable Full Bed Mesh
gcode:
  SET_PIN PIN=ADAPTIVE_BED_MESH VALUE=0
  SET_PIN PIN=FULL_BED_MESH VALUE=0
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _ADAPTIVE_PURGE_LINE_ON]
description: Enable Adaptive Purge Line
gcode:
  SET_PIN PIN=ADAPTIVE_PURGE_LINE VALUE=1
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro _ADAPTIVE_PURGE_LINE_OFF]
description: Disable Adaptive Purge Line
gcode:
  SET_PIN PIN=ADAPTIVE_PURGE_LINE VALUE=0
  RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro KAMP_BED_MESH_SETTINGS]
description: Configure Bed Mesh type
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Bed Mesh Settings"
  RESPOND TYPE=command MSG="action:prompt_text What type of bed mesh do you want to use when you start printing?"
  RESPOND TYPE=command MSG="action:prompt_button ADAPTIVE BED MESH|_ADAPTIVE_BED_MESH_ON|primary"
  RESPOND TYPE=command MSG="action:prompt_button FULL BED MESH|_FULL_BED_MESH_ON|primary"
  RESPOND TYPE=command MSG="action:prompt_button NONE|_BED_MESH_OFF|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro KAMP_PURGE_LINE_SETTINGS]
description: Configure Purge Line type
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Purge Line Settings"
  RESPOND TYPE=command MSG="action:prompt_text What type of purge line do you want to use when you start printing?"
  RESPOND TYPE=command MSG="action:prompt_button ADAPTIVE PURGE LINE|_ADAPTIVE_PURGE_LINE_ON|primary"
  RESPOND TYPE=command MSG="action:prompt_button CLASSIC PURGE LINE|_ADAPTIVE_PURGE_LINE_OFF|primary"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Heat bed for probing
    RESPOND MSG="Bed Heating"
    M190 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Home the printer
    G28 # home all axis
    # mesh bed
    RESPOND MSG="Bed Meshing"
    # If you are using QGL:
    #QUAD_GANTRY_LEVEL
    #G28 Z
    # If you are using Z-Tilt:
    #Z_TILT_ADJUST
        # If you are generating a new bed mesh:
    ## NOTE:    The adaptive meshing feature requires exclude_object     ##
    ##      and may require 'Label Objects' to be enabled in the slicer  ##
    ##           To mesh without it just use BED_MESH_CALIBRATE          ##
    {% if printer['output_pin ADAPTIVE_BED_MESH'].value == 1 %}
      RESPOND TYPE=command MSG="Starting Adaptative Bed Mesh..."
      BED_MESH_CLEAR
      BED_MESH_CALIBRATE ADAPTIVE=1
      BED_MESH_PROFILE SAVE=adaptive
      BED_MESH_PROFILE LOAD=adaptive
    {% else %}
      {% if printer['output_pin FULL_BED_MESH'].value == 0 and (not printer['bed_mesh'].profile_name) %}
        RESPOND TYPE=command MSG="No bed mesh found. Starting Full Bed Mesh..."
        BED_MESH_CALIBRATE ADAPTIVE=0
        BED_MESH_PROFILE SAVE=default
        # CX_PRINT_LEVELING_CALIBRATION
      {% endif %}
      {% if printer['output_pin FULL_BED_MESH'].value == 1 %}
        RESPOND TYPE=command MSG="Starting Full Bed Mesh..."
        BED_MESH_CALIBRATE ADAPTIVE=0
        BED_MESH_PROFILE SAVE=default
        # CX_PRINT_LEVELING_CALIBRATION
      {% endif %}
      BED_MESH_PROFILE LOAD=default
    {% endif %}


    RESPOND MSG="Heating to print temp"
    M104 S{EXTRUDER_TEMP}# set extruder temp
    G0 Z40 F240
    M109 S{EXTRUDER_TEMP} # wait for extruder temp

    RESPOND MSG="Enable Runout Sensor"
    SFS_ENABLE
    
    RESPOND MSG="Line Purge"
    {% if printer['output_pin ADAPTIVE_PURGE_LINE'].value == 1 %}
      SMART_PARK
      RESPOND TYPE=command MSG="Starting Adaptive Purge Line..."
      LINE_PURGE
    {% else %}  
      RESPOND TYPE=command MSG="Starting Classic Purge Line..."
      SIMPLE_LINE_PURGE # purge nozzle
    {% endif %}


    RESPOND MSG="Print Started"

#=====================================================
# LINE PURGE
#=====================================================
[gcode_macro SIMPLE_LINE_PURGE]
gcode:
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
    G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

#=====================================================
# END PRINT
#=====================================================
[gcode_macro END_PRINT]
gcode:

    #Fix-up extruder
    RESPOND MSG="Print Finished"
    G91
    G1 E-.5 Z0.2 F2400
    G1 X5 Y5 F6000
    G1 Z10
    G90
    SFS_DISABLE
    #Present print
    G1 X0 Y220 F6000
    M106 S0
    M104 S0
    M140 S0
    #Disable Steppers
    M84 X Y E

#=====================================================
# SPOOL MANAGER
#=====================================================
[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

#=====================================================
# BUILD THE BED MESH
#=====================================================
# G29 that does (1) home all (2) get bed mesh (3) move 
# nozzle to corner so it doesnt ooze on the bed while heating up.
# Change save to "save=yourprinter_mesh" cant use default

[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z10 F6000
    BED_MESH_PROFILE save=default

#=====================================================
# PARK PRINTER
#=====================================================

[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z10 F600 # move up 5 mm
    G90
    G1 X5 Y225 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking


#======================================================
# LOAD FILAMENT
#======================================================

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  10
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state
#======================================================
# UNLOAD FILAMENT
#======================================================
[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  10
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

#=====================================================
# PAUSE
#=====================================================

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(5) %}      #edit to your park position
    {% set y = params.Y|default(225) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
    {% else %}
    {action_respond_info("Printer not homed")}
    {% endif %}

#=====================================================
# RESUME
#=====================================================

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
    {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E{e} F2100
    {% else %}
    {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

#=====================================================
# CANCEL
#=====================================================

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    G91 # Set to incremental mode
    G0 Z10 F600 # raise extruder
    G90 # Set back to absolute mode
    TURN_OFF_HEATERS
    G0 X5 Y220 # clear print
    CLEAR_PAUSE
    #SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#=====================================================
# CALIBRATION CODES
#=====================================================

[gcode_macro Calibrate_Hotend_PID]
gcode:
    PID_CALIBRATE HEATER=extruder TARGET=200

[gcode_macro Calibrate_Bed_PID]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro Calibrate_Zoffset]
gcode:
    PROBE_CALIBRATE

[gcode_macro Tram_bed]
gcode:
    SCREWS_TILT_CALCULATE

